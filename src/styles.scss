@use '~@angular/material' as mat;
@import "./assets/css/bootstrap-grid.scss";

html {
	height: 100%;
	box-sizing: border-box;
	font-display: swap !important;
}

body {
	height: 100vh;
	box-sizing: border-box;
	margin: 0;
	font-family: Roboto, "Helvetica Neue", sans-serif;

	transition:
		color 0.5s ease,
		background-color 0.5s ease;
}

div {
	transition:
		width 0.5s ease,
		height 0.5s ease;
}

mat-card {
	border-radius: 0 !important;
}

a {
	text-decoration: none;
	color: inherit;
}

img {
	max-width: 100%;
}

@import '~@angular/material/theming';
@import './themes.scss';
@import 'app/home/home.component';

@include mat.core();

// add all/any material components that you use here,
// otherwise the theming wont be applied to that angular component
@mixin my-components-theme ($theme) {
  @include mat.button-theme($theme);
  @include mat.icon-theme($theme);
  @include mat.card-theme($theme);
  @include mat.tooltip-theme($theme);
  @include mat.chips-theme($theme);
  @include mat.tabs-theme($theme);
  @include mat.dialog-theme($theme);
  @include mat.divider-theme($theme);
  @include mat.progress-bar-theme($theme);
  @include mat.input-theme($theme);
	@include mat.core-theme($theme);
  @include mat.form-field-theme($theme);
  @include mat.list-theme($theme);
  @include mat.sidenav-theme($theme);
  @include mat.toolbar-theme($theme);
}

// include the project level components here
@mixin my_custom_theme_mixin ($theme) {
	@include my-components-theme($theme);
	@include home-component-theme($theme);
}

// we include color, typography and density globally
// then we define custom color for each theme later
@include my_custom_theme_mixin($my-theme);

// we apply seperate color for each theme (light, dark)
@mixin my-components-color-theme ($color) {
  @include mat.button-color($color);
  @include mat.icon-color($color);
  @include mat.card-color($color);
  @include mat.tooltip-color($color);
  @include mat.chips-color($color);
  @include mat.tabs-color($color);
  @include mat.dialog-color($color);
  @include mat.divider-color($color);
  @include mat.progress-bar-color($color);
  @include mat.input-color($color);
	@include mat.core-color($color);
  @include mat.form-field-color($color);
  @include mat.list-color($color);
  @include mat.sidenav-color($color);
  @include mat.toolbar-color($color);
}

// include the project level components here
@mixin my_custom_color_mixin ($color) {
	@include my-components-color-theme($color);
	@include home-component-theme($color);
}

// uncomment the following blocks of code
// if you don't to do the questionable hack i did in index.html and shared services toggle theme
// the terrible hack is more powerful and space saving but in modern browsers
// @media (prefers-color-scheme: dark) {
// 	@include my_custom_color_mixin($my-dark-theme);
// 	img:not([src*=".svg"]) {
// 		filter: grayscale(50%);
// 	}
// }
// .my-theme {
// 	@include my_custom_color_mixin($my-theme);
// }
.my-dark-theme {
	@include my_custom_color_mixin($my-dark-theme);
	img:not([src*=".svg"]) {
		filter: grayscale(50%);
	}
}
